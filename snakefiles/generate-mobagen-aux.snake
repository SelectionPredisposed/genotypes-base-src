import os

# Runtime variables
include: "variables.py"

rule all:
    input:
        expand(os.path.join(config['output_base'], 'aux', 'markerinfo', '{chr}-markerinfo'), chr=chromx),
        os.path.join(config['output_base'], 'aux', 'markerinfo', 'all-markerinfo')


# Extract marker information from VCF files in MOBAGEN
# Markers are updated to dbSNP rsid (or epacts if not present in dbSNP) and duplicate rsids are suffixed
# Important: INFO-scores are averaged
rule extract_marker_info:
    input:
        vcf=os.path.join(config['output_base'], 'imputed', 'all', '{chr}.vcf.gz')
    output:
        markerinfo=os.path.join(config['output_base'], 'aux', 'markerinfo', '{chr}-markerinfo')
    shell:
        """
        bcftools query -H -f '%CHROM\t%POS\t%ID\t%REF\t%ALT\t%INFO/TYPED\t%INFO/INFO\t%INFO/RefPanelAF\n' {input.vcf} > {output.markerinfo}
        """

# On merged MOBAGEN: Merge markerinfo files per chromosome into a single file
rule merge_marker_info:
    input:
        expand(config['output_base'] + 'aux/markerinfo/{chr}-markerinfo', chr=chromx)
    output:
        os.path.join(config['output_base'], 'aux', 'markerinfo', 'all-markerinfo')
    shell:
        """
        # Get header from first file
        HEADER="FALSE"
        for i in {input}
        do
            if [ "$HEADER" == "FALSE" ]
            then
                # fix header by removing #, numbered prefix and leading whitespace
                head -n1 $i | sed 's/#//' | sed 's/\[[0-9]\]//g' | sed 's/^ //' > {output}
                HEADER="TRUE"
            fi

            tail -n+2 $i >> {output}
        done
        """

# Generate markerinfo table for all batches.
